version: "2"

services:
  db:
    image: postgres:alpine
    volumes:
      - ./data/postgresql:/var/lib/mysql
    restart: always
    environment:
      - POSTGRES_USER=wifipunch
    networks:
      private:
        ipv4_address: 172.16.238.2

  wifipunch:
    depends_on:
      - db
    build: .
    #context: .
    #dockerfile: Dockerfile
    volumes:
      - "${VOLUME_PATH}wifipunch:/wifipunch"
    ports:
      - "5000:5000"
    restart: always
    # TODO: check if .env environment is passed to the container
    # environment:
    #   - SUBNET="${SUBNET}"
    environment:
      - FLASK_ENV
      - FROM_EMAIL
      - TO_EMAIL
      - SENDGRID_API_KEY
      - WIFIPUNCH_API_KEY
      - FLASK_APP=/wifipunch/app.py
    networks:
      private:
        ipv4_address: 172.16.238.3
      myvlan:
        ipv4_address: "${IP_ADDR}"

volumes:
  wifipunch:

networks:
  # Private network with static IPs so we can call the cron
  private:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.16.238.0/24
        gateway: 172.16.238.1
  # MacVlan so the container can sniff the network
  myvlan:
    driver: macvlan
    driver_opts:
      parent: "${INTERFACE}"
    ipam:
      config:
        - subnet: "${SUBNET}"
          gateway: "${GATEWAY}"
